#!/bin/sh
#$-N fasta
#$-S /bin/sh
#$-o ./fasta_$JOB_ID.out
#$-e ./fasta_$JOB_ID.err
#$-q all.q
#$-pe smp 32
#$-cwd
#$-V

module load parallel

# define inputs: fasta output from stacks v2 (with whatever filters you want), and a popmap
stacks_fasta_input=populations.samples.fa
popmap=../all_mach_20badsRmvd

# make list of all "CLocus" IDs in stacks --fasta_samples output
grep "CLocus" $stacks_fasta_input | awk 'BEGIN {FS="_"; OFS="_"} ; {print $1,$2}' | sed 's/^.//g; s/$/_/g' | sort -u > CLocus_list

# make subdirs so that there's not 100s of thousands of files in one place
for f in `cat CLocus_list`; do mkdir "$f"; done

# creates fasta files for every possible CLocus x individual combination (creates empty files for non-existant combos)
parallel -j 32 "grep {1} -A1 $stacks_fasta_input | grep {2} -A1 > {1}/{1}.{2}.fastaTEMP" :::: CLocus_list $popmap

# removes empty fastaTEMP files
#ls ./*.fastaTEMP | parallel -j 32 "[ -s {} ] || rm {}" 
for f in `cat CLocus_list`; do ls ./"$f"/*.fastaTEMP | parallel -j 32 "[ -s {} ] || rm {}"; done

# creates consensus sequences for every CLocus x individual combination
#ls ./*.fastaTEMP | parallel -j 32 "perl /home/jrdupuis/Random_scripts/Consensus.pl -in {} -out {}.consensus -iupac && sed -i 's/\.\///g' {}.consensus"
for f in `cat CLocus_list`; do ls ./"$f"/*.fastaTEMP | parallel -j 32 "perl /home/jrdupuis/Random_scripts/Consensus.pl -in {} -out {}.consensus -iupac && sed -i 's/\.\///g' {}.consensus"; done

# creates a combined output fasta for every CLocus, removes some funny naming business in the fasta headers (generated by Consensus.pl, which uses the file name as a fasta header), and removes the TGCAG from the beginning of every read
cat CLocus_list | parallel -j 32 "cat ./{}/{}*.fastaTEMP.consensus > {}.combined.fasta && sed -i 's/{}//g; s/_consensus//g; s/^TGCAG//g' {}.combined.fasta" 

# clean up
for f in `cat CLocus_list`; do rm "$f"/ -fr; done
